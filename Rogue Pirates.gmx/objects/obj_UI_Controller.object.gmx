<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Values for mouse position in the screen space.
xx = 0;
yy = 0;
inRange = false;
firstItem = 574;
secondItem = 594;
thirdItem = 614;
forthItem = 634;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xx = mouse_x - view_xview[0];
yy = mouse_y - view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw all of the UI elements
//This draws the UI frame
draw_sprite(spr_UI_Overlay, 0, 0, 0);

//Draw the titles of each of the frames using a custom font.
draw_set_colour(c_white);
draw_set_font(pirateFont);

draw_text(60, 547, "Event Log");
draw_text(535, 547, "Actions");
draw_text(781, 23, "Target");
draw_text(795, 395, "You");

//Draw the mouse's x and y position based on where it is on screen.
draw_text(10, 10, xx);
draw_text(100, 10, yy);

//Player Ship Stats
draw_text(776, 430, "Hull Integrity:   " + string(playerHull));
draw_healthbar(776, 450, 961, 470, (playerHull/playerMaxHull) * 100, c_gray, c_red, c_green, 0, 1, 0);
draw_text(776, 490, "Rigging Condition:   " + string(playerRiggingHealth));
draw_healthbar(776, 510, 961, 530, (playerRiggingHealth/playerMaxRiggingHealth) * 100, c_gray, c_red, c_green, 0, 1, 0);
draw_text(776, 550, 'Munitions Loaded:
            ' + string(obj_Player_Ship.munitionsLoaded));
draw_circle(obj_Player_Ship.x + 16, obj_Player_Ship.y + 16, obj_Player_Ship.range + 16, true);

//Target Ship Stats
if (targetAquired) {
    draw_text(776, 60, "Hull Integrity:   " + string(targetID.shipHull));
    draw_healthbar(776, 80, 961, 100, (targetID.shipHull/targetID.shipMaxHull) * 100, c_gray, c_red, c_green, 0, 1, 0);
    draw_text(776, 120, "Rigging Condition:   " + string(targetID.shipRigging));
    draw_healthbar(776, 140, 961, 160, (targetID.shipRigging/targetID.shipMaxRigging) * 100, c_gray, c_red, c_green, 0, 1, 0);
    draw_text(776, 180, 'Munitions Loaded:
            ' + string(targetID.munitionsLoaded));
} else {
    draw_text(776, 60, "No Target");
}

//Actions
switch(actionList) {
    case 'none':
        draw_text(530, firstItem, 'L : Load Munitions');
    break;
    case 'load':
        draw_text(530, firstItem, '1 : Round Shot');
        draw_text(530, secondItem, '2 : Chain Shot');
        draw_text(530, thirdItem, '3 : Coin Shot');
        draw_text(530, forthItem, 'B : Back');
    break;
    case 'enemy':
        if(inRange) {
            draw_set_colour(c_white);
            draw_text(530, firstItem, 'F : Fire Cannons');
            draw_text(530, secondItem, 'L : Load Munitions');
        } else {
            draw_set_colour(c_gray);
            draw_text(530, firstItem, 'F : Fire Cannons');
            draw_set_colour(c_white);
            draw_text(530, secondItem, 'L : Load Munitions');
        }
    break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Cannon Range
draw_circle(obj_Player_Ship.x + 16, obj_Player_Ship.y + 16, obj_Player_Ship.range + 16, true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
